/*
    See     https://go.microsoft.com/fwlink/?LinkId=733558
    for the documentation about the tasks.json format

    See     https://code.visualstudio.com/docs/editor/tasks-appendix
    for the tasks schema.

    The task's properties have the following semantic:

    label:          The task's label used in the user interface.

    type:           The task's type. For a custom task, this can either be shell or process. 
                    If shell is specified, the command is interpreted as a shell command 
                    (for example: bash, cmd, or PowerShell). If process is specified, the 
                    command is interpreted as a process to execute.

    command:        The actual command to execute.

    windows:        Any Windows specific properties. Will be used instead of the default 
                    properties when the command is executed on the Windows operating system.

    group:          Defines to which group the task belongs. In the example, it belongs to 
                    the test group. Tasks that belong to the test group can be executed by 
                    running Run Test Task from the Command Palette.

    presentation:   Defines how the task output is handled in the user interface. In this 
                    example, the Integrated Terminal showing the output is always revealed 
                    and a new terminal is created on every task run.

    options:        Override the defaults for cwd (current working directory), env 
                    (environment variables), or shell (default shell). Options can be set per
                    task but also globally or per platform. Environment variables configured 
                    here can only be referenced from within your task script or process and 
                    will not be resolved if they are part of your args, command, or other 
                    task attributes.

    runOptions:     Defines when and how a task is run.

    You can see the full set of task properties and values with IntelliSense in your tasks.json file. 
    Bring up suggestions with Trigger Suggest (Ctrl+Space)
*/

{
    "version": "2.0.0",
    
    // If we are running this task in Windows use WSL as our shell
    "windows": {
        "options": {
            //"cwd": "${workspaceRoot}/src/",
            "shell": {
                "executable": "C:/Windows/System32/wsl.exe",
                "args": [
                    "--cd",
                    "\"${workspaceRoot}/src/\""
                ]
            }
        }
    },

    "tasks": [
        {   // Default Make Task
            // Can be run using hotkey 'Ctrl' + 'Shift' + 'B'
            "label": "Make",
            "type": "shell",
            "command": "make",
            "args": [],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {   // Make Clean Task
            "label": "Clean",
            "type": "shell",
            "command": "make",
            "args": [
                "clean"
            ],
            "problemMatcher": [],
        },
    ]
}